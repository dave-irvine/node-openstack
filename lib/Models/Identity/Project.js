// Generated by CoffeeScript 1.8.0
(function() {
  var BaseModel, Project, debug, minimatch, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseModel = require('../../BaseModel');

  _ = require('underscore');

  minimatch = require('minimatch');

  debug = require('debug')("OpenStack:Models:Project");

  Project = (function(_super) {
    __extends(Project, _super);

    function Project(client, project) {
      this.servers = __bind(this.servers, this);
      this.init = __bind(this.init, this);
      Project.__super__.constructor.call(this, client);
      this.description = project.description;
      this.name = project.name;
      this.id = project.id;
      this.enabled = project.enabled;
      this.tenant_id = client.auth_token.context;
    }

    Project.prototype.init = function() {
      return this.type = "identity";
    };

    Project.prototype.servers = function(detail, fn) {
      var params;
      if (detail == null) {
        detail = false;
      }
      if (fn == null) {
        fn = null;
      }
      if (typeof detail === 'function') {
        fn = detail;
        detail = false;
      }
      params = {
        tenant_id: this.id,
        detail: detail
      };
      return this.client.servers.all(params, (function(_this) {
        return function(servers) {
          if (fn) {
            return fn(servers);
          }
        };
      })(this));
    };

    return Project;

  })(BaseModel);

  module.exports = function(client) {
    return function(project) {
      var _project;
      return _project = new Project(client, project);
    };
  };

}).call(this);
